#!/usr/bin/env php
<?php

/*
 * Turns checkstyle based XML-Reports into Github Pull Request Annotations via the Checks API. This script is meant for use within your GithubAction.
 *
 * (c) Markus Staab <markus.staab@redaxo.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * https://github.com/staabm/annotate-pull-request-from-checkstyle
 */

error_reporting(E_ALL);
ini_set('display_errors', 'stderr');
gc_disable();

$version = '1.0-dev';

if ($argc === 1) {
    $xml = stream_get_contents(STDIN);
} elseif ($argc === 2 && file_exists($argv[1])) {
    $xml = file_get_contents($argv[1]);
} else {
    echo "cs2pr $version\n";
    echo "Annotate a Github Pull Request based on a Checkstyle XML-report.\n";
    echo "Usage: ". $argv[0] ." <filename>\n";
    exit(9);
}

$root = @simplexml_load_string($xml);

if (!$root) {
    $errors = libxml_get_errors();
    if ($errors) {
        fwrite(STDERR, $errors[0]->message.' on line '.$errors[0]->line.', column '.$errors[0]->column);
    } elseif (stripos($xml, '<?xml') !== 0) {
        fwrite(STDERR, 'expecting xml stream starting with a xml opening tag.');
    } else {
        fwrite(STDERR, 'unknown error. expecting checkstyle formatted xml input.');
    }
    exit(2);
}

$exit = 0;

foreach($root as $file) {
    $filename = (string)$file['name'];

    foreach($file as $error) {
        $type = (string) $error['severity'];
        $line = (string) $error['line'];
        $message = (string) $error['message'];

        annotateCheck(annotateType($type), relativePath($filename), $line, $message);
        $exit = 1;
    }
}

exit($exit);

/**
 * @param 'error'|'warning' $type
 * @param string $filename
 * @param int $line
 * @param string $message
 */
function annotateCheck($type, $filename, $line, $message) {
    echo "::{$type} file={$filename},line={$line}::{$message}\n";
}

function relativePath($path) {
    return str_replace(getcwd().'/', '', $path);
}

function annotateType($type) {
    return in_array($type, ['error', 'failure']) ? 'error' : 'warning';
}
